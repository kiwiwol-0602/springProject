<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaGroupS7.dao.ShopDAO">
	
	<!-- select -->
	<select id="getProductList" resultType="com.spring.javaGroupS7.vo.ProductVO">
		select * from product
			<where>
				<if test="categoryName == 'mainName'">mainName = #{category} order by baseName</if>
				<if test="categoryName == 'baseName'">baseName = #{category} and mainName = #{categoryTop} order by subName</if>
				<if test="categoryName == 'subName'">subName = #{category} and baseName = #{categoryTop}</if>
			</where> 
	</select>
	
	<select id="ProductListAll" resultType="com.spring.javaGroupS7.vo.ProductVO">
		select * from product;
	</select>
	
	<select id="getCategoryList" resultType="com.spring.javaGroupS7.vo.CategorySubVO">
		select * from categorySub where
			<if test="categoryName == 'mainName'">${categoryName} = #{category} group by baseName</if>
			<if test="categoryName == 'baseName'">${categoryName} = #{category} and mainName = #{categoryTop} group by subName</if>
			<if test="categoryName == 'subName'">${categoryName} = #{category} and baseName = #{categoryTop}</if>
	</select>
	
	<select id="getCategoryIndex" resultType="com.spring.javaGroupS7.vo.CategorySubVO">
		select * from categorySub where
			<if test="categoryName == 'mainName'">${categoryName} = #{category} limit 1</if>
			<if test="categoryName == 'baseName'">${categoryName} = #{category} and mainName = #{categoryTop} limit 1</if>
			<if test="categoryName == 'subName'">${categoryName} = #{category} and baseName = #{categoryTop} limit 1</if>
	</select>
	
	<select id="getProduct" resultType="com.spring.javaGroupS7.vo.ProductVO">
		select * from product where idx = #{idx};
	</select>
	
	<select id="getCategoryMain" resultType="com.spring.javaGroupS7.vo.ProductVO">
		select * from categoryMain order by mainCode; 
	</select>
	
	<select id="getCategoryBase" resultType="com.spring.javaGroupS7.vo.ProductVO">
		select * from categoryBase where mainName = #{mainName};
	</select>
	
	<select id="getCategorySub" resultType="com.spring.javaGroupS7.vo.ProductVO">
		select * from categorySub where mainName = #{mainName} and baseName = #{baseName};
	</select>
	
	<select id="getProductMaxIdx" resultType="com.spring.javaGroupS7.vo.ProductVO">
		select * from product order by idx desc limit 1;
	</select>
	
	<select id="getProductCode"	resultType="String">
		SELECT CONCAT(
    categorymain.mainCode, '-',
    LPAD(CAST(categorybase.baseCode AS CHAR), 2, '0'), '-',
    LPAD(CAST(categorysub.subCode AS CHAR), 2, '0'), '-',
    LPAD(#{maxIdx}, 3, '0')) AS productCode
		FROM categorymain
		JOIN categorybase ON categorymain.mainName = categorybase.mainName
		JOIN categorysub ON categorybase.baseName = categorysub.baseName
		WHERE categorymain.mainName = #{mainName}
		AND categorybase.baseName = #{baseName}
		AND categorysub.subName = #{subName};
	</select>
	  
	<select id="getCategoryProductNameOne" resultType="com.spring.javaGroupS7.vo.ProductVO">
    select * from product where productName = #{productName}; 
  </select>
  
  <select id="getCategoryProductNameOneVO" resultType="com.spring.javaGroupS7.vo.ProductVO">
    select * from product where productName = #{vo.productName} and productCode = #{vo.productCode}; 
  </select>
	 
 	<select id="getExistingContent" resultType="String">
 		select content from product where idx = #{idx};
 	</select>
 	
 	<select id="getCategoryProductName" resultType="com.spring.javaGroupS7.vo.ProductVO">
  	select * from product
  	where mainName=#{mainName} and baseName=#{baseName} and subName=#{subName};
  </select>
	 
	 <select id="productInforGet" resultType="com.spring.javaGroupS7.vo.ProductVO">
	 	select * from product where productName=#{productName} order by idx limit 1;
	 </select>
	 
	 <select id="optionList" resultType="com.spring.javaGroupS7.vo.ProductOptionVO">
	 	select * from productOption where productIdx = #{productIdx} order by optionName;
	 </select>
	 
	 <select id="getOptionSame" resultType="int">
    select count(*) from productOption where productIdx=#{productIdx} and optionName=#{optionName};
  </select>
	 
	 <select id="getOption" resultType="com.spring.javaGroupS7.vo.ProductOptionVO">
	 	select * from productOption where productIdx = #{productIdx} order by idx;
	 </select>
	 
	 <select id="getCartOptionSearch" resultType="com.spring.javaGroupS7.vo.ProductCartVO">
	 	select * from productCart where productName=#{productName} and optionName=#{optionName} and mid=#{mid};
	 </select>
	 
	 <select id="getCartList" resultType="com.spring.javaGroupS7.vo.ProductCartVO">
	 	select * from productCart where mid=#{mid} order by idx;;
	 </select>
	 
	 
	 
	 
	<!-- insert -->
	<insert id="setProductInput">
		insert into product value 
			(
				#{vo.idx},#{vo.productCode},#{vo.productName},#{vo.subName},#{vo.subCode},#{vo.baseName},#{vo.mainName},
				#{vo.price},#{vo.discount},#{vo.pay},#{vo.thumbnail},#{vo.titleImg},#{vo.fName},
				#{vo.fSName},#{vo.fSize},#{vo.content},default,default,default,default,default
			);
	</insert>
	
	<insert id="setOptionInput">
    insert into productOption values (default,#{vo.optionName},#{vo.productIdx},#{vo.price});
  </insert>
	
	<insert id="cartInput">
    insert into productCart values (default,#{vo.mid},#{vo.productIdx},#{vo.productName},#{vo.price},#{vo.thumbnail},#{vo.optionIdx},#{vo.optionName},#{vo.optionPrice},#{vo.optionNum},#{vo.totalPrice},default);
  </insert>
	
	<!-- update -->
	
	<update id="setProductUpdate">
		update product set
			productName = #{vo.productName}, subName = #{vo.subName}, baseName = #{vo.baseName}, mainName = #{vo.mainName}, 
			price = #{vo.price}, discount = #{vo.discount}, pay = #{vo.pay}, thumbnail = #{vo.thumbnail}, 
			titleImg = #{vo.titleImg}, content = #{vo.content}, wDate = now(), status = #{vo.status}, display = #{vo.display}
		where idx = #{vo.idx};
	</update>
	
	<update id="cartUpdate">
    update productCart set optionNum=#{vo.optionNum},totalPrice=totalPrice+#{vo.totalPrice} 
    where productName=#{vo.productName} and optionName=#{vo.optionName};
  </update>
	
	
	<!-- delete -->
	<delete id="setProductDelete">
		delete from product where idx = #{idx};
	</delete>
	
	<delete id="setOptionDelete">
		delete from productOption where idx = #{idx};
	</delete>
	
	<delete id="cartDelete">
		delete from productCart where idx = #{idx}; 
	</delete>

</mapper>