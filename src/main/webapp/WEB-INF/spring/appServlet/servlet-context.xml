<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="/js/**" location="/resources/js/" />
	
	<resources mapping="/css/**" location="/resources/css/" />
	
	<resources mapping="/ckeditor/**" location="/resources/ckeditor/" />
	
	<resources mapping="/data/**" location="/resources/data/" />
	<resources mapping="/member/**" location="/resources/data/member/" />
	<resources mapping="/product/**" location="/resources/data/shop/product/" />
	
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/main/**" location="/resources/images/main/" />
	<resources mapping="/shop/**" location="/resources/images/shop/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.spring.javaGroupS7" />
	
	<!-- 파일 업로드에 필요한 라이브러리 객체 been등록(최대 저장 용량 제한, 한글처리) -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="31457280"/>
		<beans:property name="defaultEncoding" value="utf-8"/>
	</beans:bean>
	
	<!-- Spring Security의 BCryptPasswordEncoder 객체를 Bean으로 등록 -->
	<beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- 트랜젝션을 어노테이션으로 처리하기 위한 클래스 등록 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- Tiles 환경설정 -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
			  <beans:value>/WEB-INF/spring/appServlet/tiles-def.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- Interceptor -->
	
</beans:beans>
